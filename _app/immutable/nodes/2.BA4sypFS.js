import{d as T,t as o,a}from"../chunks/CN_ZqSgL.js";import{i as I}from"../chunks/Duf2ExrC.js";import{p as P,s as i,a as A,c as f,r as m}from"../chunks/C62VPXP5.js";import{g as $}from"../chunks/SmxbRj3_.js";import{A as r}from"../chunks/CVaL9IIc.js";function k(){$("#/view")}function C(){$("#/create")}var x=o('<div slot="head"><p>How do I contact you?</p></div>'),D=o('<div slot="details"><p>Feel free to message me at "that1nerd" on discord.</p></div>'),F=o('<div slot="head"><p>Is it accurate?</p></div>'),H=o('<div slot="details"><p>Yes absolutely. The accuracy of my data is very important to me.</p> <p>It has been rigourously tested and vetted against real game data to ensure the results are indistinguishable.</p> <p>If you find results that seem contradictory then please contact me as soon as possible.</p></div>'),N=o('<div slot="head"><p>How do I use this?</p></div>'),V=o('<div slot="details"><p>First you need to create a config file. Press the "Create config" button above, fill out the form and then send the file it spits out to @that1nerd on discord.</p> <p>I will run The AutoTester&#8482; with your config and let you know when this site is update with your results.</p> <p>Then simply navigate to the "View data" page, select your config (and any other configs you want to compare to), select what graphs to generate and hit generate.</p> <p>It will redirect you to the code viewer page, give it some time to generate the graphs then look at your data. If you want to share simply give them the code or the URL, either works.</p></div>'),j=o('<div slot="head"><p>Can I share this?</p></div>'),B=o('<div slot="details"><p>Yes absolutely. Feel free to share all of this, when you view data it will generate a code that can also be shared (the full link also works).</p></div>'),L=o('<div slot="head"><p>Why would I use this?</p></div>'),W=o('<div slot="details"><p>1: The setup you want to test is too expensive for your account.</p> <p>2: Testing against bosses you have limited access to (like past METAs).</p> <p>3: Convience, this tool allows you to get statistically significant amoutns of data without all the hastle.</p> <p>4: The Autotester&#8482; allows you to modify enemies and dungeons as your heart desires to get clearer data.</p> <p>5: Because the code is all run under my control I can collect data that is impossible to detangle under normal runs (like DoT).</p></div>'),Y=o('<div slot="head"><p>How does it work?</p></div>'),q=o('<div slot="details"><p>It effectively is all of the battle code but translated into another language and then run.</p></div>'),E=o('<div slot="head"><p>Can you share the source code?</p></div>'),J=o('<div slot="details"><p>No sadly not. The code contains sensitive data that cannot be removed. Not to mention actually getting it to run is a nightmare.</p> <p>I am doing the best I can to make it as accesible to anyone who wants to do testing.</p></div>'),M=o(`<div style="margin: auto; text-align: center;"><h1>The AutoTester&#8482;</h1> <h3>Autotester&#8482; version: 1.2.4 (last updated 30/5/25)</h3> <h3>Data viewer version: 2.3.1 (last updated 30/5/25)</h3> <br> <button>Create config for testing</button> <button>View data</button> <br> <h3>What's The AutoTester&#8482;?</h3> <p>The Autotester&#8482; is a program that extremely accurately replicates the AL battlespace and collects loads of very detailed data.</p> <p>I have it set up in such a way that specifically formatted JSON files (I refer to as "configs") can configure how the tester runs.</p> <p>This means that anyone can try out wierd or very expensive setups without needing to invest on their actual account.</p> <p>Because of how it collects data it is far more accurate than judging by end screens. It seperates DoT, AA, and surface damage, records health, etc.</p> <p>This data is then stored on this site and can be viewed in a variety of graphs that are generated as requested by you.</p> <br> <h3>FAQ</h3> <div style="justify-content: center; align-items: center;"><!> <!> <!> <!> <!> <!> <!></div></div>`);function z(_,w){P(w,!1),I();var d=M(),n=i(f(d),8);n.__click=[C];var l=i(n,2);l.__click=[k];var p=i(l,20),h=f(p);r(h,{$$slots:{head:(t,s)=>{var e=x();a(t,e)},details:(t,s)=>{var e=D();a(t,e)}}});var v=i(h,2);r(v,{$$slots:{head:(t,s)=>{var e=F();a(t,e)},details:(t,s)=>{var e=H();a(t,e)}}});var c=i(v,2);r(c,{$$slots:{head:(t,s)=>{var e=N();a(t,e)},details:(t,s)=>{var e=V();a(t,e)}}});var u=i(c,2);r(u,{$$slots:{head:(t,s)=>{var e=j();a(t,e)},details:(t,s)=>{var e=B();a(t,e)}}});var g=i(u,2);r(g,{$$slots:{head:(t,s)=>{var e=L();a(t,e)},details:(t,s)=>{var e=W();a(t,e)}}});var y=i(g,2);r(y,{$$slots:{head:(t,s)=>{var e=Y();a(t,e)},details:(t,s)=>{var e=q();a(t,e)}}});var b=i(y,2);r(b,{$$slots:{head:(t,s)=>{var e=E();a(t,e)},details:(t,s)=>{var e=J();a(t,e)}}}),m(p),m(d),a(_,d),A()}T(["click"]);export{z as component};
